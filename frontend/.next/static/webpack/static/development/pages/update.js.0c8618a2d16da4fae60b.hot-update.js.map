{"version":3,"file":"static/webpack/static\\development\\pages\\update.js.0c8618a2d16da4fae60b.hot-update.js","sources":["webpack:///./components/UpdateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id \n      title \n      description \n      price \n    }\n  }`;\n/*changes are not required if someone save changes \nso no ! after variable types*/\nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION(\n    $id: ID!\n    $title: String\n    $description: String\n    $price: Int\n  ) {\n    updateItem(\n      id: $id\n      title: $title\n      description: $description\n      price: $price\n    ) {\n      id\n      title \n      description\n      price \n    }\n  }\n`;\n\nclass UpdateItem extends Component {\n  state = {\n    //only putting in things that have changed\n  };\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  };\n  updateItem = async (e, updateItemMutation) => {\n    e.preventDefault();\n    console.log('Updating Item!!');\n    console.log(this.state);\n\n    const res = await updateItemMutation({\n      variables: {\n        id: this.props.id,\n        ...this.state,\n      }\n    });\n    console.log('Updated!!');\n    Router.back();\n  }\n  render() {\n    return (\n      <Query query={SINGLE_ITEM_QUERY} variables={{\n        id: this.props.id\n      }}>\n      {({data, loading}) => {\n        if (loading) return <p>Loading...</p>;\n        if (!data.item) return <p>No Item Found for ID {this.props.id}</p>\n        return (\n      //if everything is a render prop, how do I access\n      //updateItem outside of this function by another function?\n      //We pass a method to a component method thru an event onSubmit\n      <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n        {(updateItem, { loading, error }) => (\n          <Form\n            onSubmit={e => this.updateItem(e, updateItem)}>\n            <Error error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"title\">\n                Title\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  required\n                  defaultValue={data.item.title}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <label htmlFor=\"price\">\n                Price\n                <input\n                  type=\"number\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"Price\"\n                  required\n                  defaultValue={data.item.price}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <label htmlFor=\"description\">\n                Description\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"Enter A Description\"\n                  required\n                  defaultValue={data.item.description}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button type=\"submit\">Update</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n      );\n      }}\n      </Query>\n    );\n  }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;;;AAEA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AADA;AADA;AACA;AANA;AAKA;AAMA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAaqDA;AAGA;;;;AAvFA;AACA;AAyFA;;;;;A","sourceRoot":""}